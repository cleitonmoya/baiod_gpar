plot(1:T, y_, type="h", main=expression(eta[t] * "|" * (delta[t]==1) "(median)"), xlab="t", ylab="")
#####
#Outlier detection
par(mfrow = c(3, 1), mar=c(4,3,2,2))
plot(y, type="l", main="Time series and outliers", xlab="", ylab="", font.main=1)
points(tau, y[tau], col="blue", pch=0)
points(tau_est, y[tau_est], col="red", pch=4)
legend(x="topright", pch=c(0, 4), col=c("blue", "red"), legend=c("label", "detected"))
plot(prob_delta_mean, type="h", main=expression(delta[t]~posterior~probability~(mean)), xlab="", ylab="")
legend(x="topright", col="red", lty=2, legend="threshold")
abline(h=threshold, col="red", lty=2)
y_ <- rep(0, T)
y_[tau_est] <- eta_est[tau_est]
plot(1:T, y_, type="h", main=expression(eta[t] * "|" * (delta[t]==1) (median)), xlab="t", ylab="")
#####
#Outlier detection
par(mfrow = c(3, 1), mar=c(4,3,2,2))
plot(y, type="l", main="Time series and outliers", xlab="", ylab="", font.main=1)
points(tau, y[tau], col="blue", pch=0)
points(tau_est, y[tau_est], col="red", pch=4)
legend(x="topright", pch=c(0, 4), col=c("blue", "red"), legend=c("label", "detected"))
plot(prob_delta_mean, type="h", main=expression(delta[t]~posterior~probability~(mean)), xlab="", ylab="")
legend(x="topright", col="red", lty=2, legend="threshold")
abline(h=threshold, col="red", lty=2)
y_ <- rep(0, T)
y_[tau_est] <- eta_est[tau_est]
plot(1:T, y_, type="h", main=expression(eta[t] * "|" * (delta[t]==1) ~ (median)), xlab="t", ylab="")
#####
#Outlier detection
par(mfrow = c(3, 1), mar=c(4,3,2,2))
plot(y, type="l", main="Time series and outliers", xlab="", ylab="", font.main=1)
points(tau, y[tau], col="blue", pch=0)
points(tau_est, y[tau_est], col="red", pch=4)
legend(x="topright", pch=c(0, 4), col=c("blue", "red"), legend=c("label", "detected"))
plot(prob_delta_mean, type="h", main=expression(delta[t]~posterior~probability~(mean)), xlab="", ylab="")
legend(x="topright", col="red", lty=2, legend="threshold")
abline(h=threshold, col="red", lty=2)
y_ <- rep(0, T)
y_[tau_est] <- eta_est[tau_est]
plot(1:T, y_, type="h", main=expression(eta[t] ~* "|" *~ (delta[t]==1) ~ (median)), xlab="t", ylab="")
#####
#Outlier detection
par(mfrow = c(3, 1), mar=c(4,3,2,2))
plot(y, type="l", main="Time series and outliers", xlab="", ylab="", font.main=1)
points(tau, y[tau], col="blue", pch=0)
points(tau_est, y[tau_est], col="red", pch=4)
legend(x="topright", pch=c(0, 4), col=c("blue", "red"), legend=c("label", "detected"))
plot(prob_delta_mean, type="h", main=expression(delta[t]~posterior~probability~(mean)), xlab="", ylab="")
legend(x="topright", col="red", lty=2, legend="threshold")
abline(h=threshold, col="red", lty=2)
y_ <- rep(0, T)
y_[tau_est] <- eta_est[tau_est]
plot(1:T, y_, type="h", main=expression(eta[t] ~* "|" * (delta[t]==1) ~ (median)), xlab="t", ylab="")
#####
#Outlier detection
par(mfrow = c(3, 1), mar=c(4,3,2,2))
plot(y, type="l", main="Time series and outliers", xlab="", ylab="", font.main=1)
points(tau, y[tau], col="blue", pch=0)
points(tau_est, y[tau_est], col="red", pch=4)
legend(x="topright", pch=c(0, 4), col=c("blue", "red"), legend=c("label", "detected"))
plot(prob_delta_mean, type="h", main=expression(delta[t]~posterior~probability~(mean)), xlab="", ylab="")
legend(x="topright", col="red", lty=2, legend="threshold")
abline(h=threshold, col="red", lty=2)
y_ <- rep(0, T)
y_[tau_est] <- eta_est[tau_est]
plot(1:T, y_, type="h", main=expression(eta[t] ~* "|" ~ (delta[t]==1) ~ (median)), xlab="t", ylab="")
#####
#Outlier detection
par(mfrow = c(3, 1), mar=c(4,3,2,2))
plot(y, type="l", main="Time series and outliers", xlab="", ylab="", font.main=1)
points(tau, y[tau], col="blue", pch=0)
points(tau_est, y[tau_est], col="red", pch=4)
legend(x="topright", pch=c(0, 4), col=c("blue", "red"), legend=c("label", "detected"))
plot(prob_delta_mean, type="h", main=expression(delta[t]~posterior~probability~(mean)), xlab="", ylab="")
legend(x="topright", col="red", lty=2, legend="threshold")
abline(h=threshold, col="red", lty=2)
y_ <- rep(0, T)
y_[tau_est] <- eta_est[tau_est]
plot(1:T, y_, type="h", main=expression(eta[t] ~* " | " * (delta[t]==1) ~ (median)), xlab="t", ylab="")
#####
#Outlier detection
par(mfrow = c(3, 1), mar=c(4,3,2,2))
plot(y, type="l", main="Time series and outliers", xlab="", ylab="", font.main=1)
points(tau, y[tau], col="blue", pch=0)
points(tau_est, y[tau_est], col="red", pch=4)
legend(x="topright", pch=c(0, 4), col=c("blue", "red"), legend=c("label", "detected"))
plot(prob_delta_mean, type="h", main=expression(delta[t]~posterior~probability~(mean)), xlab="", ylab="")
legend(x="topright", col="red", lty=2, legend="threshold")
abline(h=threshold, col="red", lty=2)
y_ <- rep(0, T)
y_[tau_est] <- eta_est[tau_est]
plot(1:T, y_, type="h", main=expression(eta[t] * " | " * (delta[t]==1) ~ (median)), xlab="t", ylab="")
#####
# Execution time
end_time <- proc.time()
elapsed_time <- (end_time - start_time)[[3]]
printf("Execution time: %.0f s\n", elapsed_time)
# Acceptance ratios
ac_p  <- na_alpha/N
ac_mu <- na_mu/N
ac_xi <- na_xi/N
printf("Acceptance rate - alpha: %.2f", ac_p)
printf("Acceptance rate - mu: %.2f", ac_mu)
printf("Acceptance rate - xi: %.2f", ac_xi)
printf("Acceptance rate - beta: %.2f", ac_beta)
# Values after burn in
Alpha_final <- Alpha[(burnin+1):N]
Mu_final <- Mu[(burnin+1):N]
Xi_final <- Xi[(burnin+1):N]
Delta_final <- Delta[(burnin+1):N, ]
Prob_delta_final <- Prob_delta[(burnin+1):N, ]
Eta_final <- Eta[(burnin+1):N, ]
# Mean values
alpha_mean <- mean(Alpha_final)
mu_mean <- mean(Mu_final)
xi_mean <- mean(Xi_final)
prob_delta_mean <- colMeans(Prob_delta_final)
# Estimatives using median
delta_est <- numeric(T)
eta_est <- numeric(T)
median_round_up <- function(x){
q <- quantile(x, 0.5)
med <- min(x[x >= q])
return(med)
}
for (j in 1:T) {
delta_est[j] <- median_round_up(Delta_final[, j])
eta_est[j] <- median_round_up(Eta_final[, j])
}
# Estimated outliers using threshold probability
threshold <- 0.4
tau_est <- which(prob_delta_mean > threshold)
printf("alpha mean: %.2f", alpha_mean)
printf("mu mean: %.2f", mu_mean)
printf("xi mean: %.2f", xi_mean)
cat("tau_est: ", tau_est)
cat("\ntau: ", tau)
cat("\neta_est|tau_est: ", eta_est[tau_est])
plot(Delta[,tau], type="l", main="alpha", xlab="", ylab="")
tau
Delta[, 7]
plot(prob_delta_mean[tau], type="l", main="alpha", xlab="", ylab="")
plot(PProb_delta[, tau])
plot(Prob_delta[, tau])
Prob_delta[, tau]
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(prob_delta_mean[tau], type="l", main="alpha", xlab="", ylab="")
Prob_delta[, tau]
plot(Prob_delta[, 7])
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(prob_delta_mean[7], type="l", main="alpha", xlab="", ylab="")
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 7], type="l", main="alpha", xlab="", ylab="")
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 7], type="l", main="alpha", xlab="", ylab="")
lines(Prob_delta[, 7], type="l", main="alpha", xlab="", ylab="", col=2)
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 7], type="l", main="alpha", xlab="", ylab="")
for (j in 2:length(tau)){
lines(Prob_delta[, tau[j]], type="l", main="alpha", xlab="", ylab="", col=j)
}
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 7], type="l", main="alpha", xlab="", ylab="")
for (j in 2:3){
lines(Prob_delta[, tau[j]], type="l", main="alpha", xlab="", ylab="", col=j)
}
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 7], type="l", main="delta_t", xlab="", ylab="")
for (j in 2:3){
lines(Prob_delta[, tau[j]], type="l", col=j)
}
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 7], type="l", main="delta_t", xlab="", ylab="")
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(Prob_delta[, tau[3]], type="l", main="delta_t", xlab="", ylab="")
tau_est
tau
#####
#Outlier detection
par(mfrow = c(3, 1), mar=c(4,3,2,2))
plot(y, type="l", main="Time series and outliers", xlab="", ylab="", font.main=1)
points(tau, y[tau], col="blue", pch=0)
points(tau_est, y[tau_est], col="red", pch=4)
legend(x="topright", pch=c(0, 4), col=c("blue", "red"), legend=c("label", "detected"))
plot(prob_delta_mean, type="h", main=expression(delta[t]~posterior~probability~(mean)), xlab="", ylab="")
legend(x="topright", col="red", lty=2, legend="threshold")
abline(h=threshold, col="red", lty=2)
y_ <- rep(0, T)
y_[tau_est] <- eta_est[tau_est]
plot(1:T, y_, type="h", main=expression(eta[t] * " | " * (delta[t]==1) ~ (median)), xlab="t", ylab="")
#####
#Outlier detection
par(mfrow = c(3, 1), mar=c(4,3,2,2))
plot(y, type="l", main="Time series and outliers", xlab="", ylab="", font.main=1)
points(tau, y[tau], col="blue", pch=0)
points(tau_est, y[tau_est], col="red", pch=4)
legend(x="topright", pch=c(0, 4), col=c("blue", "red"), legend=c("label", "detected"))
plot(prob_delta_mean, type="h", main=expression(delta[t]~posterior~probability~(mean)), xlab="", ylab="")
legend(x="topright", col="red", lty=2, legend="threshold")
abline(h=threshold, col="red", lty=2)
y_ <- rep(0, T)
y_[tau_est] <- eta_est[tau_est]
plot(1:T, y_, type="h", main=expression(eta[t] * " | " * (delta[t]==1) ~ (median)), xlab="t", ylab="")
tau
tau_est
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(Prob_delta[, tau[4]], type="l", main="delta_t", xlab="", ylab="")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/baiod_gpar_mcmc.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/baiod_gpar_mcmc.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
#####
# Gráfico
par(mar = c(2, 2, 0.2, 0.2))
plot(x, type='l')
abline(h=mu, col="gray", lty=2)
#####
# Gráfico
par(mar = c(2, 2, 0.2, 0.2))
plot(x, type='s')
abline(h=mu, col="gray", lty=2)
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/baiod_gpar_mcmc.R")
#####
#Outlier detection
par(mfrow = c(3, 1), mar=c(4,3,2,2))
plot(y, type="s", main="Time series and outliers", xlab="", ylab="", font.main=1)
points(tau, y[tau], col="blue", pch=0)
points(tau_est, y[tau_est], col="red", pch=4)
legend(x="topright", pch=c(0, 4), col=c("blue", "red"), legend=c("label", "detected"))
plot(prob_delta_mean, type="h", main=expression(delta[t]~posterior~probability~(mean)), xlab="", ylab="")
legend(x="topright", col="red", lty=2, legend="threshold")
abline(h=threshold, col="red", lty=2)
y_ <- rep(0, T)
y_[tau_est] <- eta_est[tau_est]
plot(1:T, y_, type="h", main=expression(eta[t] * " | " * (delta[t]==1) ~ (median)), xlab="t", ylab="")
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(Prob_delta[, tau[25]], type="l", main="delta_t", xlab="", ylab="")
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(Prob_delta[, tau[25]], type="l", main="delta_t", xlab="", ylab="")
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 25], type="l", main="delta_t", xlab="", ylab="")
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 75], type="l", main="delta_t", xlab="", ylab="")
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 125], type="l", main="delta_t", xlab="", ylab="")
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 175], type="l", main="delta_t", xlab="", ylab="")
#####
par(mfrow = c(1, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 176], type="l", main="delta_t", xlab="", ylab="")
#####
# Trace plots
par(mfrow = c(3, 1), mar=c(4,3,2,2))
plot(Alpha, type="l", main="alpha", xlab="", ylab="", ylim=c(0,1))
abline(v=burnin, col="gray", lty=2)
plot(Mu, type="l", main="mu", xlab="", ylab="")
abline(v=burnin, col="gray", lty=2)
plot(Xi, type="l", main="xi", xlab="step", ylab="", ylim=c(0,1))
abline(v=burnin, col="gray", lty=2)
#####
par(mfrow = c(3, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 25], type="l", main="delta_t", xlab="", ylab="")
lines(Prob_delta[, 75], type="l", main="delta_t", xlab="", ylab="", col=2)
abline(v=burnin, col="gray", lty=2)
#####
par(mfrow = c(3, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 25], type="l", main="delta_t", xlab="", ylab="")
lines(Prob_delta[, 75], type="l", main="delta_t", xlab="", ylab="", col=2)
lines(Prob_delta[, 125], type="l", main="delta_t", xlab="", ylab="", col=3)
abline(v=burnin, col="gray", lty=2)
#####
par(mfrow = c(4, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 25], type="l", main="delta_t", xlab="", ylab="")
lines(Prob_delta[, 75], type="l", main="delta_t", xlab="", ylab="", col=2)
lines(Prob_delta[, 125], type="l", main="delta_t", xlab="", ylab="", col=3)
abline(v=burnin, col="gray", lty=2)
plot(Eta[, 25], type="l", main="eta_t", xlab="", ylab="")
plot(P[, 25], type="l", main="p_t", xlab="", ylab="")
plot(Beta[, 25], type="l", main="beta_t", xlab="", ylab="")
Beta
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/baiod_gpar_mcmc.R")
#####
# Trace plots
par(mfrow = c(3, 1), mar=c(4,3,2,2))
plot(Alpha, type="l", main="alpha", xlab="", ylab="", ylim=c(0,1))
abline(v=burnin, col="gray", lty=2)
plot(Mu, type="l", main="mu", xlab="", ylab="")
abline(v=burnin, col="gray", lty=2)
plot(Xi, type="l", main="xi", xlab="step", ylab="", ylim=c(0,1))
abline(v=burnin, col="gray", lty=2)
par(mfrow = c(4, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 25], type="l", main="delta_t", xlab="", ylab="")
lines(Prob_delta[, 75], type="l", main="delta_t", xlab="", ylab="", col=2)
lines(Prob_delta[, 125], type="l", main="delta_t", xlab="", ylab="", col=3)
abline(v=burnin, col="gray", lty=2)
plot(Eta[, 25], type="l", main="eta_t", xlab="", ylab="")
plot(P[, 25], type="l", main="p_t", xlab="", ylab="")
plot(Beta[, 25], type="h", main="beta_t", xlab="", ylab="")
#####
# Trace plots
par(mfrow = c(3, 1), mar=c(4,3,2,2))
plot(Alpha, type="l", main="alpha", xlab="", ylab="", ylim=c(0,1))
abline(v=burnin, col="gray", lty=2)
plot(Mu, type="l", main="mu", xlab="", ylab="")
abline(v=burnin, col="gray", lty=2)
plot(Xi, type="l", main="xi", xlab="step", ylab="", ylim=c(0,1))
abline(v=burnin, col="gray", lty=2)
par(mfrow = c(4, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 25], type="l", main="delta_t", xlab="", ylab="")
lines(Prob_delta[, 75], type="l", main="delta_t", xlab="", ylab="", col=2)
lines(Prob_delta[, 125], type="l", main="delta_t", xlab="", ylab="", col=3)
abline(v=burnin, col="gray", lty=2)
plot(Eta[, 25], type="l", main="eta_t", xlab="", ylab="")
plot(P[, 25], type="l", main="p_t", xlab="", ylab="")
plot(Beta[, 25], type="s", main="beta_t", xlab="", ylab="")
#####
# Trace plots
par(mfrow = c(3, 1), mar=c(4,3,2,2))
plot(Alpha, type="l", main="alpha", xlab="", ylab="", ylim=c(0,1))
abline(v=burnin, col="gray", lty=2)
plot(Mu, type="l", main="mu", xlab="", ylab="")
abline(v=burnin, col="gray", lty=2)
plot(Xi, type="l", main="xi", xlab="step", ylab="", ylim=c(0,1))
abline(v=burnin, col="gray", lty=2)
par(mfrow = c(4, 1), mar=c(4,3,2,2))
plot(Prob_delta[, 25], type="l", main="delta_t", xlab="", ylab="")
lines(Prob_delta[, 75], type="l", main="delta_t", xlab="", ylab="", col=2)
lines(Prob_delta[, 125], type="l", main="delta_t", xlab="", ylab="", col=3)
abline(v=burnin, col="gray", lty=2)
plot(P[, 25], type="l", main="p_t", xlab="", ylab="")
abline(v=burnin, col="gray", lty=2)
plot(Eta[, 25], type="l", main="eta_t", xlab="", ylab="")
abline(v=burnin, col="gray", lty=2)
plot(Beta[, 25], type="s", main="beta_t", xlab="", ylab="")
abline(v=burnin, col="gray", lty=2)
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/baiod_gpar_mcmc.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
print(mean(x))
print(sd(x))
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
mu
print(mu*(1-alpha))
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
mean_x
mu
mean(x)
sigma2_x
var(x)
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/baiod_gpar_mcmc.R")
mean(x)
mu
mu/(1-x)
mu/(1-xi)
mean(x)
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
#####
# Gráfico
par(mar = c(2, 2, 0.2, 0.2))
plot(x, type='l')
abline(h=mu, col="gray", lty=2)
#####
# Gráfico
par(mar = c(2, 2, 0.2, 0.2))
plot(x, type='s')
abline(h=mu, col="gray", lty=2)
#####
# Theoretical vs. sample mean and variance
printf("Theoretical mean: %.2f", mean_x)
printf("Sample mean: %.2f", mean(x))
printf("Theoretical var: %.2f", sigma2_x)
printf("Sample var:", var(x))
sigma2_x
#####
# Theoretical vs. sample mean and variance
printf("Theoretical mean: %.2f", mean_x)
printf("Sample mean: %.2f", mean(x))
printf("Theoretical var: %.2f", sigma2_x)
printf("Sample var: %.2f", var(x))
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
q*mu
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gp.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gp.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gp.R")
mean(x)
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gp.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gp.R")
1-theta
(1-theta)^3
2/(1-theta)^3
sigma2 <- lambda/(1-theta)^3
sigma2
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gp.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gp.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
q*mu
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
1/0.15
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
#####
# Gráfico
par(mar = c(2, 2, 0.2, 0.2))
plot(x, type='s')
abline(h=mean_x, col="gray", lty=2)
abline(h=var_x, col="gray", lty=3)
var_x
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
#####
# Gráfico
par(mar = c(2, 2, 0.2, 0.2))
plot(x, type='s')
abline(h=mean_x, col="gray", lty=2)
abline(h=var_x, col="gray", lty=3)
legend(x="topright", lty=c(2,3), col="gray", legend=c("E[X]", "Var[X]"))
#####
# Gráfico
par(mar = c(2, 2, 0.2, 0.2))
plot(x, type='s')
abline(h=mean_x, col="gray", lty=2)
abline(h=3*sd_x, col="gray", lty=3)
sd_x <- sqrt(var_x)
#####
# Gráfico
par(mar = c(2, 2, 0.2, 0.2))
plot(x, type='s')
abline(h=mean_x, col="gray", lty=2)
abline(h=3*sd_x, col="gray", lty=3)
legend(x="topright", lty=c(2,3), col="gray", legend=c("E[X]", expression(2 sigma)))
#####
# Gráfico
par(mar = c(2, 2, 0.2, 0.2))
plot(x, type='s')
abline(h=mean_x, col="gray", lty=2)
abline(h=3*sd_x, col="gray", lty=3)
legend(x="topright", lty=c(2,3), col="gray", legend=c("E[X]", "2sd[X]")))
#####
# Gráfico
par(mar = c(2, 2, 0.2, 0.2))
plot(x, type='s')
abline(h=mean_x, col="gray", lty=2)
abline(h=3*sd_x, col="gray", lty=3)
legend(x="topright", lty=c(2,3), col="gray", legend=c("E[X]", "2sd[X]"))
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/baiod_gpar_mcmc.R")
alpha <- 0.85
mu    <- 2
xi    <- 0.5
q     <- 1-alpha
mean_x <- mu/(1-xi)
var_x <- mu/(1-xi)^3
sd_x <- sqrt(var_x)
mean_x
sd_x
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
#####
# Gráfico
par(mar = c(2, 2, 0.2, 0.2))
plot(x, type='s')
abline(h=mean_x, col="gray", lty=2)
abline(h=mean_x + 3*sd_x, col="gray", lty=3)
legend(x="topright", lty=c(2,3), col="gray", legend=c("E[X]", "E[X] + 3sigma[X]"))
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/gpar_simulation.R")
x
which(x=10)
which(x==10)
which(x==10)
which(x==5)
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/baiod_gpar_mcmc.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/baiod_gpar_mcmc.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/baiod_gpar_mcmc.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/baiod_gpar_mcmc.R")
source("C:/Users/cleit/OneDrive/Documentos/Projetos/R/Trabalho Séries Temporais/baiod_gpar_mcmc.R")
